// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace ScrapeShark.Client
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    internal partial interface IScrapeSharkApi : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <param name='url'>
        /// </param>
        /// <param name='apiKey'>
        /// </param>
        /// <param name='includeJavaScript'>
        /// </param>
        /// <param name='elementSelector'>
        /// </param>
        /// <param name='includeStyleSheets'>
        /// </param>
        /// <param name='includeImages'>
        /// </param>
        /// <param name='browser'>
        /// </param>
        /// <param name='waitMilliseconds'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> GetContentWithHttpMessagesAsync(string url = default(string), string apiKey = default(string), bool? includeJavaScript = true, string elementSelector = default(string), bool? includeStyleSheets = false, bool? includeImages = false, string browser = "Firefox", int? waitMilliseconds = 0, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='url'>
        /// </param>
        /// <param name='apiKey'>
        /// </param>
        /// <param name='isFullPage'>
        /// </param>
        /// <param name='elementSelector'>
        /// </param>
        /// <param name='browser'>
        /// </param>
        /// <param name='waitMilliseconds'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> GetScreenshotWithHttpMessagesAsync(string url = default(string), string apiKey = default(string), bool? isFullPage = false, string elementSelector = default(string), string browser = "Firefox", int? waitMilliseconds = 0, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
